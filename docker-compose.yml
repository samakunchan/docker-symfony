#version: '3.8'

services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9000:8000"
    volumes:
      - ./project:/var/www/html

  mysqldb:
    platform: linux/x86_64 # Attention : platform c'est pour les Mac M1. Commenter cette ligne pour les autres environnements.
    image: mariadb:latest
    container_name: mysql-server
    command: --authentication_policy=mysql_native_password
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} # ou MYSQL_ALLOW_EMPTY_PASSWORD=true → Dans ce cas, on se connecte sans mot de passe
#      - MYSQL_DATABASE=${MYSQL_DATABASE} # Je préfère créer ma base de donnée en CLI. Mais le choix est libre.
    ports:
      - "${DB_PORT}:3306"

  phpmyadmin:
    image: samakunchan/phpmyadmin
    container_name: phpmyadmin-server
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${PMA_HOST}
      - UPLOAD_LIMIT='${UPLOAD_LIMIT}'
    depends_on:
      - mysqldb

  postgres-server:
    container_name: postgres-server-symfony
    image: "postgres:latest"
    environment:
#      POSTGRES_DB: ${POSTGRES_DB} Je préfère créer ma base de donnée en CLI. Mais le choix est libre.
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - data_volume-api:/var/lib/postgresql/data/
      - sql_volume-api:/docker-entrypoint-initdb.d/:ro
    ports:
      - "5433:5432"

  pgadmin:
    container_name: pgadmin-symfony
    image: "dpage/pgadmin4:latest"
    environment:
#      POSTGRES_DB: ${POSTGRES_DB} Je préfère créer ma base de donnée en CLI. Mais le choix est libre.
      POSTGRES_HOST: postgres-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5051:80"
    depends_on:
      - postgres-server

volumes:
  db-data:
  data_volume-api:
  sql_volume-api:


